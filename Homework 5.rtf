{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Vivianne Dinh\
305329335\
\
Homework #5\
\
1. The output of the MIPS code is: \
	The value of i is: 7\
	\
    Explanation: \
	main():\
		$s7 = $ra\
		$s3 = 0\
		$s4 = 1\
		$s5 = 0\
		$s6 = save, address of array\
	loop\
		$s3 = array index\
		$t8 = address in loop\
		$t9 = value of element\
			compares value $t9 with 0; if not equal, then exit\
			first element of the array that does not equal zero is the 7th element\
			save index 7, print message\
\
2. The worst ordering for the iterators would be: e. jyix\
\
    Explanation: j and y are iterators of the second dimension (columns) and therefore, their 	iterations are between array elements that are consecutive or close by (locality). x and i are 	iterators of the first dimension (rows) therefore, there would be bigger jumps between elements 	and less locality and more cache misses, resulting in longer execution time. 
\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\
}